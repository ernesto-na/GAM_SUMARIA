package xxgam.oracle.apps.fa.sumaria.trx.server;

import java.sql.Connection;

import java.sql.PreparedStatement;

import java.sql.ResultSet;

import java.sql.SQLException;

import java.sql.Types;

import java.util.List;

import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;
import oracle.apps.fnd.framework.server.OADBTransaction;

import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.domain.Number;

import oracle.jdbc.internal.OracleCallableStatement;

import xxgam.oracle.apps.fa.sumaria.inquiry.server.XxGamSafOmTblVOImpl;
import xxgam.oracle.apps.fa.sumaria.inquiry.server.XxGamSafOmTblVORowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class InversionTrxAMImpl extends OAApplicationModuleImpl {
    
    public String  strUniOper1;  
    public String  strPeriodo1;
    public String  strDivisa1;
    public String  strRubroOrg1;
    public String  strRubroDes1;
    
    /**This is the default constructor (do not remove)
     */
     
     /**Container's getter for PeriodoVO1
      */
     public PeriodoVOImpl getPeriodoVO1() {
         return (PeriodoVOImpl)findViewObject("PeriodoVO1");
     }

     /**Container's getter for RubroVO1
      */
     public RubroVOImpl getRubroVO1() {
         return (RubroVOImpl)findViewObject("RubroVO1");
     }


    public InversionTrxAMImpl() {
    }

    /**Sample main for debugging Business Components code using the tester.
     */
    public static void main(String[] args) {
        launchTester("xxgam.oracle.apps.fa.sumaria.trx.server", /* package name */
      "InversionTrxAMLocal" /* Configuration Name */);
    }

    /**Container's getter for InversionTrxVO1
     */
    public InversionTrxVOImpl getInversionTrxVO1() {
        return (InversionTrxVOImpl)findViewObject("InversionTrxVO1");
    }
    
    /**Container's getter for CuentasRubrosVO1
     */
    public CuentasRubrosVOImpl getCuentasRubrosVO1() {
        return (CuentasRubrosVOImpl)findViewObject("CuentasRubrosVO1");
    }
    /**Container's getter for SaldoInicialVO1
     */
    public SaldoInicialVOImpl getSaldoInicialVO1() {
        return (SaldoInicialVOImpl)findViewObject("SaldoInicialVO1");
    }
    
    /**Container's getter for AdicionesVO1
     */
    public AdicionesVOImpl getAdicionesVO1() {
        return (AdicionesVOImpl)findViewObject("AdicionesVO1");
    }


    /*  Metodo de llenado de tablas */
     public CodeCuentaVOImpl getCodeCuentaVO1() {
         return (CodeCuentaVOImpl)findViewObject("CodeCuentaVO1");
     }
    public void fillTable() {
        
         InversionTrxVOImpl inversionTrxVOImpl = this.getInversionTrxVO1(); 
         inversionTrxVOImpl.setMaxFetchSize(0);
         
         filterCuentasRubros("02","1");
        
         filterCuentasRubros("02","13");
         
         inversionTrxVOImpl.executeQuery();
        
     }/* fin de public void fillTable() */ 

    /* filtro de cuentas y rubros  */
    private void filterCuentasRubros(String pStrUnidadOperativa, String pStrIdRubro) {
        /* CuentasRubrosVOImpl rubro, cuenta y subcuenta */
        CuentasRubrosVOImpl cuentasRubrosVOImpl = getCuentasRubrosVO1();
        CuentasRubrosVORowImpl cuentasRubrosVORowImpl = null;
        
        InversionTrxVOImpl inversionTrxVOImpl = getInversionTrxVO1(); 
        
        
        ViewCriteria vc = cuentasRubrosVOImpl.createViewCriteria();
        ViewCriteriaRow vcr1 = vc.createViewCriteriaRow();
        vcr1.setAttribute("OperatingUnit",pStrUnidadOperativa);
        vcr1.setAttribute("IdRubro",pStrIdRubro);
        vc.add(vcr1);
        cuentasRubrosVOImpl.applyViewCriteria(vc);
        
        cuentasRubrosVOImpl.executeQuery();
        while(cuentasRubrosVOImpl.hasNext()){
            cuentasRubrosVORowImpl = (CuentasRubrosVORowImpl)cuentasRubrosVOImpl.next();
            
            
            
            InversionTrxVORowImpl inversionTrxVORowImpl = (InversionTrxVORowImpl)inversionTrxVOImpl.createRow(); 
            inversionTrxVORowImpl.setCuenta(cuentasRubrosVORowImpl.getCuenta());
            inversionTrxVORowImpl.setSubCuenta(cuentasRubrosVORowImpl.getSubcuenta());
            /*obtenemos saldo inicial y cuentas*/
            oracle.jbo.domain.Number getSaldoInicial = filterSaldoInicial(pStrUnidadOperativa, cuentasRubrosVORowImpl.getCuenta(), cuentasRubrosVORowImpl.getSubcuenta(), "GAM_MXN", "DIC-16");
            inversionTrxVORowImpl.setSaldoInicial(getSaldoInicial); 
            System.out.println("cuentasRubrosVORowImpl.getCuenta():     "+cuentasRubrosVORowImpl.getCuenta()+"  "+"cuentasRubrosVORowImpl.getSubcuenta():   "+cuentasRubrosVORowImpl.getSubcuenta());
            System.out.println("getSaldoInicial     "+getSaldoInicial);
            
            oracle.jbo.domain.Number getCodeCcuenta = filterCodeCuentas("02",cuentasRubrosVORowImpl.getCuenta(),cuentasRubrosVORowImpl.getSubcuenta());
            System.out.println("****getCodeCcuenta      ***"+getCodeCcuenta);
            
            /*oracle.jbo.domain.Number getAddition = addition(getCodeCcuenta,"ENE-17",new oracle.jbo.domain.Number(2021));
            System.out.println("****getAddition      ***"+getAddition);
            inversionTrxVORowImpl.setAdiciones(getAddition);*/
             oracle.jbo.domain.Number getAddition = addition(getCodeCcuenta,"ENE-17",new oracle.jbo.domain.Number(2021));
            System.out.println("****getAddition      ***"+getAddition);
            inversionTrxVORowImpl.setAdiciones(getAddition);
            
            oracle.jbo.domain.Number getReduction = reduction(getCodeCcuenta,"ENE-17",new oracle.jbo.domain.Number(2021));
            System.out.println("****getReduction      ***"+getReduction);
            inversionTrxVORowImpl.setDisminuciones(getReduction);
            
             oracle.jbo.domain.Number[] getBajas = bajas("02","FEB-17",cuentasRubrosVORowImpl.getCuenta(),cuentasRubrosVORowImpl.getSubcuenta());
            inversionTrxVORowImpl.setBajas_Venta(getBajas[0]);//setBajas_Venta(getBajas);
            
            inversionTrxVORowImpl.setBajas_scrap(getBajas[1]);
             
            oracle.jbo.domain.Number[] getDeprn = depreciacion("02","MAR-17",cuentasRubrosVORowImpl.getCuenta(),cuentasRubrosVORowImpl.getSubcuenta());
            inversionTrxVORowImpl.setDeprn_Venta(getDeprn[0]);
            
            inversionTrxVORowImpl.setDeprn_scrap(getDeprn[1]);
            
            inversionTrxVORowImpl.setSaldo_final(new oracle.jbo.domain.Number(0));
            
            /*inversionTrxVORowImpl.setTransacciones(" ");*/
            
            inversionTrxVOImpl.insertRow(inversionTrxVORowImpl);
            
        }/*fin de while*/
        
    }/* fin de private void filterCuentasRubros(String pStrUnidadOperativa, String pStrIdRubro) */

   /* filtro de saldo inicial   */
    private oracle.jbo.domain.Number filterSaldoInicial(String pStrUnidadOperativa, String pStrCuenta, 
                                    String pStrSubcuenta, String pStrDivisa, 
                                    String pStrPeriodo) {
                                    
        /*SaldoInicialVOImpl saldo inicial periodo, divisa, cuenta, subcuenta y UO*/
         SaldoInicialVOImpl saldoInicialVOImpl = getSaldoInicialVO1();
         SaldoInicialVORowImpl saldoInicialVORowImpl = null;
         
        oracle.jbo.domain.Number retval = new oracle.jbo.domain.Number(0); 

        
        ViewCriteria vc = saldoInicialVOImpl.createViewCriteria();
        ViewCriteriaRow vcr1 = vc.createViewCriteriaRow();
        vcr1.setAttribute("Segment1",pStrUnidadOperativa);
        vcr1.setAttribute("Segment5",pStrCuenta);
        vcr1.setAttribute("Segment6",pStrSubcuenta);
        vcr1.setAttribute("Name",pStrDivisa);
        vcr1.setAttribute("PeriodName",pStrPeriodo);
        vc.add(vcr1);
        saldoInicialVOImpl.applyViewCriteria(vc);
        saldoInicialVOImpl.executeQuery();
        
        while(saldoInicialVOImpl.hasNext()){
         saldoInicialVORowImpl = (SaldoInicialVORowImpl)saldoInicialVOImpl.next();
            retval = saldoInicialVORowImpl.getYtd();
        }/*fin de while*/
         
        return retval;
    }/* private oracle.jbo.domain.Number filterSaldoInicial */

    public oracle.jbo.domain.Number addition(oracle.jbo.domain.Number p_code_combination
                                                ,String p_periodo
                                                ,oracle.jbo.domain.Number pni_divisa){
        
        String strErrmsg;
        String strErrcod;
        String retval;
        Number retAdd; /*=new oracle.jbo.domain.Number(2);*/
        
        System.out.println("**p_code_combination** "+p_code_combination);
        System.out.println("**p_periodo**   "+p_periodo);
        System.out.println("**pni_divisa    **"+pni_divisa);
        String strStmt = " BEGIN " +
                         " :1 := APPS.XXGAM_SAF_UTIL_V1_PKG.ADDITION ( p_code_combination  => :2" +
                         "               , p_periodo          => :3" +
                         "               , pni_divisa          => :4" +
                         "               ); " +
                         " END; " ;
        
        OADBTransaction oadbtransaction = (OADBTransaction)getOADBTransaction();
        OracleCallableStatement oraclecallablestatement =  (OracleCallableStatement)oadbtransaction.createCallableStatement(strStmt, 1);
        
        try
                    {
                      /*oraclecallablestatement.registerOutParameter(1,Types.VARCHAR);
                      oraclecallablestatement.registerOutParameter(2,Types.VARCHAR);*/
                      /* oraclecallablestatement.setNUMBER(1,p_code_combination);*/
                       oraclecallablestatement.registerOutParameter(1,Types.DOUBLE);
                      oraclecallablestatement.setString(2,p_code_combination.toString());
                      oraclecallablestatement.setString(3,p_periodo);
                      /* oraclecallablestatement.setNUMBER(3,pni_divisa); */
                      oraclecallablestatement.setDouble(4,pni_divisa.doubleValue());
                      
                      
                     oraclecallablestatement.execute();
        
                    /*strErrmsg = oraclecallablestatement.getString(1);
                    strErrcod = oraclecallablestatement.getString(2);
                    
                    System.out.println("strErrmsg:"+strErrmsg);
                    System.out.println("strErrcod:"+strErrcod);
                    */
                    /* retAdd = (Number)oraclecallablestatement.getNUMBER(4); */
                     System.out.println(oraclecallablestatement.getDouble(1));
                     
                     retAdd = new oracle.jbo.domain.Number(oraclecallablestatement.getDouble(1)); 
                      
                     System.out.println("retAdd: "+retAdd);
                     
                  } catch (SQLException sqle)
                  {
                     retval = "Fallo procedimiento addition. "+sqle.getErrorCode()+" , "+sqle.getMessage();
                      throw new OAException(retval,OAException.ERROR); 
                  }
         return  retAdd;         
    }/*fin de public oracle.jbo.domain.Number adiciones()*/

     private oracle.jbo.domain.Number filterCodeCuentas(String pStrUnidadOperativa, String pStrCuenta, String pStrSubcuenta) {
                                          
              /*SaldoInicialVOImpl saldo inicial periodo, divisa, cuenta, subcuenta y UO*/
               CodeCuentaVOImpl codeCuentaVOImpl = getCodeCuentaVO1();
              CodeCuentaVORowImpl codeCuentaVORowImpl = null;
              
              oracle.jbo.domain.Number retval = new oracle.jbo.domain.Number(0); 

              
              ViewCriteria vc = codeCuentaVOImpl.createViewCriteria();
              ViewCriteriaRow vcr1 = vc.createViewCriteriaRow();
              vcr1.setAttribute("Segment1",pStrUnidadOperativa);
              vcr1.setAttribute("Segment5",pStrCuenta);
              vcr1.setAttribute("Segment6",pStrSubcuenta);

              vc.add(vcr1);
              codeCuentaVOImpl.applyViewCriteria(vc);
              codeCuentaVOImpl.executeQuery();
              
              while(codeCuentaVOImpl.hasNext()){
               codeCuentaVORowImpl = (CodeCuentaVORowImpl)codeCuentaVOImpl.next();
                  retval = codeCuentaVORowImpl.getCodeCombinationId();
              }/*fin de while*/
               
              return retval;
          }/* private oracle.jbo.domain.Number filterSaldoInicial */

     /* filtro de filterCuentasRubros   */
     

          public oracle.jbo.domain.Number reduction(oracle.jbo.domain.Number p_code_combination
                                                      ,String p_periodo
                                                      ,oracle.jbo.domain.Number pni_divisa){
              
              String strErrmsg;
              String strErrcod;
              String retval;
              Number retAdd =new oracle.jbo.domain.Number(0);
              
          
              String strStmt = " BEGIN " +
                               " :4 := APPS.XXGAM_SAF_UTIL_V1_PKG.REDUCTION ( p_code_combination  => :1" +
                               "               , p_periodo          => :2" +
                               "               , pni_divisa          => :3" +
                               "               ); " +
                               " END; " ;
              
              OADBTransaction oadbtransaction = (OADBTransaction)getTransaction();
              OracleCallableStatement oraclecallablestatement =  (OracleCallableStatement)oadbtransaction.createCallableStatement(strStmt, 1);
              
              try
                          {
                            /*oraclecallablestatement.registerOutParameter(1,Types.VARCHAR);
                            oraclecallablestatement.registerOutParameter(2,Types.VARCHAR);*/
                            /* oraclecallablestatement.setNUMBER(1,p_code_combination);*/
                            oraclecallablestatement.setString(1,p_code_combination.stringValue());
                            oraclecallablestatement.setString(2,p_periodo);
                            /* oraclecallablestatement.setNUMBER(3,pni_divisa); */
                            oraclecallablestatement.setDouble(3,pni_divisa.doubleValue());
                            oraclecallablestatement.registerOutParameter(4,Types.DOUBLE);
                            
                           oraclecallablestatement.execute();
              
                          /*strErrmsg = oraclecallablestatement.getString(1);
                          strErrcod = oraclecallablestatement.getString(2);
                          
                          System.out.println("strErrmsg:"+strErrmsg);
                          System.out.println("strErrcod:"+strErrcod);
                          */
                          /* retAdd = (Number)oraclecallablestatement.getNUMBER(4); */
                           System.out.println(oraclecallablestatement.getDouble(4));
                           
                           retAdd = new oracle.jbo.domain.Number(oraclecallablestatement.getDouble(4)); 
                            
                           System.out.println("retAdd: "+retAdd);
                           
                        } catch (SQLException sqle)
                        {
                           retval = "Fallo procedimiento addition. "+sqle.getErrorCode()+" , "+sqle.getMessage();
                            throw new OAException(retval,OAException.ERROR); 
                        }
               return  retAdd;         
          }/*fin de public oracle.jbo.domain.Number reducciones()*/

           private oracle.jbo.domain.Number adiciones(oracle.jbo.domain.Number p_code_combination
                                                ,String p_periodo
                                                ,oracle.jbo.domain.Number pni_divisa) {
                                           
               /*SaldoInicialVOImpl saldo inicial periodo, divisa, cuenta, subcuenta y UO*/
                AdicionesVOImpl adicionesVOImpl = getAdicionesVO1();
                AdicionesVORowImpl adicionesVORowImpl = null;
                
               /*oracle.jbo.domain.Number retval = new oracle.jbo.domain.Number(0); */
                oracle.jbo.domain.Number retval = new oracle.jbo.domain.Number(0);
               
               ViewCriteria vc = adicionesVOImpl.createViewCriteria();
               ViewCriteriaRow vcr1 = vc.createViewCriteriaRow();
               vcr1.setAttribute("LedgerId",p_code_combination);
               vcr1.setAttribute("PeriodName",p_periodo);
               vcr1.setAttribute("CodeCombinationId",pni_divisa);

               vc.add(vcr1);
               adicionesVOImpl.applyViewCriteria(vc);
               adicionesVOImpl.executeQuery();
               
               while(adicionesVOImpl.hasNext()){
               adicionesVORowImpl = (AdicionesVORowImpl)adicionesVOImpl.next();
                   retval = adicionesVORowImpl.getAccountedDebit();
               }/*fin de while*/
                
               return retval;
           }/* private oracle.jbo.domain.Number filterSaldoInicial */



            private oracle.jbo.domain.Number[] bajas(
                                                  String                       psi_operating_unit 
                                                  ,String                       psi_period_name
                                                  ,String                       psi_cuenta
                                                  ,String                       psi_sub_cuenta
                                                  ) {
                                            
             String strErrmsg;
             String strErrcod;
             String retval;
             Number ret_pno_costo_x_venta;           /*=new oracle.jbo.domain.Number(2);*/
             Number ret_pno_costo_scrap;             /*=new oracle.jbo.domain.Number(2);*/
             Number ret_pno_costo_scrap_usd;         /*=new oracle.jbo.domain.Number(2);*/
             Number ret_pno_costo_x_venta_usd;       /*=new oracle.jbo.domain.Number(2);*/
             Number bajas_mxn_usd[];
             
              String strStmt = " BEGIN " +
                                       " APPS.get_retirement_info_rubro1 ( pso_errmsg                   => :1" +
                                       "                                       , pso_errcod             => :2" +
                                       "                                       , psi_operating_unit     => :3" +
                                       "                                       , psi_period_name        => :4" +
                                       "                                       , psi_cuenta             => :5" +
                                       "                                       , psi_sub_cuenta         => :6" +
                                       "                                       , pno_costo_x_venta      => :7" +
                                       "                                       , pno_costo_scrap        => :8" +
                                       "                                       , pno_costo_scrap_usd    => :9" +
                                       "                                       , pno_costo_x_venta_usd  => :10" +
                                       "               ); " +
                                       " END; " ;
                                       
        OADBTransaction oadbtransaction = (OADBTransaction)getOADBTransaction();
        OracleCallableStatement oraclecallablestatement =  (OracleCallableStatement)oadbtransaction.createCallableStatement(strStmt, 1);
        
    try
                        {
                          oraclecallablestatement.registerOutParameter(1,Types.DOUBLE);
                          oraclecallablestatement.registerOutParameter(2,Types.DOUBLE);
                          oraclecallablestatement.setString(3,psi_operating_unit);
                                              
                          oraclecallablestatement.setString(4,psi_period_name);
                          oraclecallablestatement.setString(5,psi_cuenta);
                          oraclecallablestatement.setString(6,psi_sub_cuenta);
                          oraclecallablestatement.registerOutParameter(7,Types.DOUBLE);
                          oraclecallablestatement.registerOutParameter(8,Types.DOUBLE);
                          oraclecallablestatement.registerOutParameter(9,Types.DOUBLE);
                          oraclecallablestatement.registerOutParameter(10,Types.DOUBLE);

                         oraclecallablestatement.execute();
                         
                         ret_pno_costo_x_venta      = new oracle.jbo.domain.Number(oraclecallablestatement.getDouble(7)); 
                         ret_pno_costo_scrap        = new oracle.jbo.domain.Number(oraclecallablestatement.getDouble(8));
                         ret_pno_costo_scrap_usd    = new oracle.jbo.domain.Number(oraclecallablestatement.getDouble(9));
                         ret_pno_costo_scrap_usd  = new oracle.jbo.domain.Number(oraclecallablestatement.getDouble(10));
                         bajas_mxn_usd = new oracle.jbo.domain.Number[4];
                        bajas_mxn_usd[0]=ret_pno_costo_x_venta;
                        bajas_mxn_usd[1]=ret_pno_costo_scrap;
                        bajas_mxn_usd[2]=ret_pno_costo_scrap_usd;
                        bajas_mxn_usd[3]=ret_pno_costo_scrap_usd;
                        
                        
                      } catch (SQLException sqle) 
                      {
                                           retval = "Fallo procedimiento addition. "+sqle.getErrorCode()+" , "+sqle.getMessage();
                                            throw new OAException(retval,OAException.ERROR); 
                                        }
                               return  bajas_mxn_usd;         
                          }/*private oracle.jbo.domain.Number bajas*/

                           private oracle.jbo.domain.Number[] depreciacion(
                                                                 String                       psi_operating_unit 
                                                                 ,String                       psi_period_name
                                                                 ,String                       psi_cuenta
                                                                 ,String                       psi_sub_cuenta
                                                                 ) {
                                                           
                            String strErrmsg;
                            String strErrcod;
                            String retval;
                            Number ret_pno_deprn_x_venta;           /*=new oracle.jbo.domain.Number(2);*/
                            Number ret_pno_deprn_scrap;             /*=new oracle.jbo.domain.Number(2);*/
                            Number ret_pno_deprn_x_venta_usd;         /*=new oracle.jbo.domain.Number(2);*/
                            Number ret_pno_deprn_scrap_usd;       /*=new oracle.jbo.domain.Number(2);*/
                            Number deprn_mxn_usd[];
                            
                             String strStmt = " BEGIN " +
                                                      " APPS.get_deprn_info_rubro1 ( pso_errmsg                   => :1" +
                                                      "                                       , pso_errcod             => :2" +
                                                      "                                       , psi_operating_unit     => :3" +
                                                      "                                       , psi_period_name        => :4" +
                                                      "                                       , psi_cuenta             => :5" +
                                                      "                                       , psi_sub_cuenta         => :6" +
                                                      "                                       , pno_deprn_x_venta      => :7" +
                                                      "                                       , pno_deprn_scrap        => :8" +
                                                      "                                       , pno_deprn_x_venta_usd    => :9" +
                                                      "                                       , pno_deprn_scrap_usd  => :10" +
                                                      "               ); " +
                                                      " END; " ;
                                                      
                           OADBTransaction oadbtransaction = (OADBTransaction)getOADBTransaction();
                           OracleCallableStatement oraclecallablestatement =  (OracleCallableStatement)oadbtransaction.createCallableStatement(strStmt, 1);
                           
                           try
                                       {
                                         oraclecallablestatement.registerOutParameter(1,Types.DOUBLE);
                                         oraclecallablestatement.registerOutParameter(2,Types.DOUBLE);
                                         oraclecallablestatement.setString(3,psi_operating_unit);
                                                             
                                         oraclecallablestatement.setString(4,psi_period_name);
                                         oraclecallablestatement.setString(5,psi_cuenta);
                                         oraclecallablestatement.setString(6,psi_sub_cuenta);
                                         oraclecallablestatement.registerOutParameter(7,Types.DOUBLE);
                                         oraclecallablestatement.registerOutParameter(8,Types.DOUBLE);
                                         oraclecallablestatement.registerOutParameter(9,Types.DOUBLE);
                                         oraclecallablestatement.registerOutParameter(10,Types.DOUBLE);

                                        oraclecallablestatement.execute();
                                        
                                        ret_pno_deprn_x_venta      = new oracle.jbo.domain.Number(oraclecallablestatement.getDouble(7)); 
                                        ret_pno_deprn_scrap        = new oracle.jbo.domain.Number(oraclecallablestatement.getDouble(8));
                                        ret_pno_deprn_x_venta_usd    = new oracle.jbo.domain.Number(oraclecallablestatement.getDouble(9));
                                        ret_pno_deprn_scrap_usd  = new oracle.jbo.domain.Number(oraclecallablestatement.getDouble(10));
                                        deprn_mxn_usd = new oracle.jbo.domain.Number[4];
                                       deprn_mxn_usd[0]=ret_pno_deprn_x_venta;
                                       deprn_mxn_usd[1]=ret_pno_deprn_scrap;
                                       deprn_mxn_usd[2]=ret_pno_deprn_x_venta_usd;
                                       deprn_mxn_usd[3]=ret_pno_deprn_scrap_usd;
                                       
                                       
                                     } catch (SQLException sqle) 
                                     {
                                                          retval = "Fallo procedimiento addition. "+sqle.getErrorCode()+" , "+sqle.getMessage();
                                                           throw new OAException(retval,OAException.ERROR); 
                                                       }
                                              return  deprn_mxn_usd;         
                                         }/*private oracle.jbo.domain.Number[] depreciacion*/

/********************************************************************************
 * nueva forma de manipular las transaccciones
 ******************************************************************************/

 public void fillTable2(String strUniOper, String strPeriodo
                        ,String strDivisa, String strRubroOrg
                            , String strRubroDes) {
     
      TransfManVOImpl transfManVOImpl = getTransfManVO1();
      
       String varStr = "IN ("+ strRubroOrg+","+ strRubroDes+")";
       System.out.println(varStr);
       

      ViewCriteria vc = transfManVOImpl.createViewCriteria();
      ViewCriteriaRow vcr1 = vc.createViewCriteriaRow();
      vcr1.setAttribute("OperatingUnit",strUniOper);
      vcr1.setAttribute("CurrencyCode",strDivisa);
      vcr1.setAttribute("Periodo",strPeriodo);
      
      System.out.println("strRubroDes:  "+strRubroDes);
      if(null != strRubroDes && (!strRubroDes.equals(""))){
          vcr1.setAttribute("NumRubro",varStr);
      }
      else{
          vcr1.setAttribute("NumRubro",strRubroOrg);
      }
      //vcr1.setAttribute("Rubro",strRubroDes);
      //vcr1.setAttribute("Subcuenta",pStrIdRubro);

      vc.add(vcr1);
      transfManVOImpl.applyViewCriteria(vc);
      
      transfManVOImpl.executeQuery();

  }//* fin de public void fillTable() */
  
/* metodo que elimina registros de la tabla XXGAM_SAF_INV_MOV_MAN_TBL */ 
   public void eliminar(
                     String                      psi_operating_unit 
                    ,String                      psi_period_name
                    ,String                      psi_rubro_org
                    ,String                      psi_rubro_des
                    ,String                      psi_divisa
                    ) {
      
           String strErrmsg;
           String strErrcod;
           String retval;
           
           String strStmt = " BEGIN " +
                            "delete from XXGAM_SAF_INV_MOV_MAN_TBL "+
                            " where OPERATING_UNIT = '"+ psi_operating_unit +"'"+ 
                            " and PERIODO = '" + psi_period_name +"'"+
                            " and (NUM_RUBRO = nvl('" + psi_rubro_org + "','0') or NUM_RUBRO = nvl('"+psi_rubro_des+"','0'))"+
                            " and CURRENCY_CODE = '" + psi_divisa+ "';"+
                            " commit;"+
                             " END; " ;
            
            //System.out.println("strStmt: " +strStmt);                 
           OADBTransaction oadbtransaction = (OADBTransaction)getOADBTransaction();
           OracleCallableStatement oraclecallablestatement =  (OracleCallableStatement)oadbtransaction.createCallableStatement(strStmt, 1);

            
           try
           {

                      oraclecallablestatement.execute();
                fillTable2(psi_operating_unit, psi_period_name, psi_divisa,psi_rubro_org, psi_rubro_des); 
                
                      
                      
            } catch (SQLException sqle) 
           {
                      retval = "Fallo procedimiento eliminar. "+sqle.getErrorCode()+" , "+sqle.getMessage();
                      throw new OAException(retval,OAException.ERROR); 
           }
        
        
         throw new OAException("Registros eliminados correctamente",OAException.CONFIRMATION);
           
        
}/*fin de private void eliminar*/



/* metodo que genera informacion en la tabla*/
 public void generarOM(
                      String                      psi_operating_unit 
                     ,String                      psi_period_name
                                         ,String                      psi_divisa
                     ,String                      psi_rubro_org
                     ,String                      psi_rubro_des
                     
                     ) {            
         String strErrmsg;
         String strErrcod;
         String retval;
         
                  String strStmt = " BEGIN " +
                                                           " APPS.XXGAM_SAF_FINAL_STRUCT_PKG.GENERA_OM(PSI_OPERATING_UNIT  => :1" +
                                                                       ",PSI_PERIODO                        => :2" +      
                                                                       ",PSI_DIVISA                         => :3" +
                                                                       ",PSI_RUBRO_1                        => :4" +
                                                                       ",PSI_RUBRO_2                        => :5" +
                                                                       ",pso_errmsg                         => :6" +
                                                                       ",pso_errcode                        => :7" +
                                                           "               ); " +
                                                           " END; " ;    
                                                           
         System.out.println("strStmt: "+strStmt);                                   
         OADBTransaction oadbtransaction = (OADBTransaction)getOADBTransaction();
         OracleCallableStatement oraclecallablestatement =  (OracleCallableStatement)oadbtransaction.createCallableStatement(strStmt, 1);

         try
                            {
                                  
                                  oraclecallablestatement.setString(1,psi_operating_unit);
                                  oraclecallablestatement.setString(2,psi_period_name);
                                  oraclecallablestatement.setString(3,psi_divisa);
                                  oraclecallablestatement.setString(4,psi_rubro_org);
                                  oraclecallablestatement.setString(5,psi_rubro_des);
                                  
                                  oraclecallablestatement.registerOutParameter(6,Types.VARCHAR);
                                  oraclecallablestatement.registerOutParameter(7,Types.VARCHAR);
                                  

                                 oraclecallablestatement.execute();
                              fillTable2(psi_operating_unit, psi_period_name, psi_divisa,psi_rubro_org, psi_rubro_des); 
                              
                                 strErrmsg = oraclecallablestatement.getString(6);
                                 strErrcod = oraclecallablestatement.getString(7);
                                 
                          } catch (SQLException sqle) 
                          {
                                           retval = "Fallo procedimiento generar. "+sqle.getErrorCode()+" , "+sqle.getMessage();
                                           throw new OAException(retval,OAException.ERROR); 
                    }
                         
                                 if ((null != strErrmsg) && !("".equals(strErrmsg))){
                                 
                                         if (null != strErrcod){
                                 
                                                 if(strErrcod.equals("2")){
                                 
                                 
                                                         throw new OAException(strErrmsg,OAException.ERROR); 

                                                         }//fin de if(strErrcod.equals("2")
                                                 else if(strErrcod.equals("1")){
                                                 
                                                         throw new OAException(strErrmsg,OAException.INFORMATION);
                                                 
                                                 }//fin de else if
                                                 
                                 
                                 }//fin de if interno
                                 
                                 }//fin de if
                                 
                                 else {
                                 
                                         throw new OAException(strErrmsg,OAException.CONFIRMATION);
                                 
                                 }//fin de else
                                 
                                 
                                 
                          }/*public void generarOM*/


/*metodo suma*/
public void suma(){
    
    //declaramos objeto fila y dos tipo oracle.jbo.domain.Number
    TransfManVORowImpl transfManVORowImpl = null;
    oracle.jbo.domain.Number suma = new oracle.jbo.domain.Number(0);
    oracle.jbo.domain.Number saldo_final = new oracle.jbo.domain.Number(0);
    int i = 0;
    //obtenemos el VO
    TransfManVOImpl transfManVOImpl = getTransfManVO1();
    System.out.println("*************** Antes del for");
    
    for(transfManVORowImpl = (TransfManVORowImpl)transfManVOImpl.first()
       ;null != transfManVORowImpl 
       ;transfManVORowImpl =  (TransfManVORowImpl)transfManVOImpl.next()){
       
        suma = new oracle.jbo.domain.Number(0);
        saldo_final = new oracle.jbo.domain.Number(0);
        i++;
        System.out.println("*************** Dentro del for: "+i);
            
    //seteamos la suma
    transfManVORowImpl.setSuma(new oracle.jbo.domain.Number(0));
    
    System.out.println("transfManVORowImpl.setSuma(new oracle.jbo.domain.Number(0))");
    //Sumamos todas la variables
    //transfManVORowImpl.setSuma( transfManVORowImpl.getAdiciones().add(transfManVORowImpl.getAdicionesMan())); 
    
    suma = suma.add(transfManVORowImpl.getAdiciones());
    suma =suma.add(null != transfManVORowImpl.getAdicionesMan()?transfManVORowImpl.getAdicionesMan():new oracle.jbo.domain.Number(0));
    
    suma =suma.add(transfManVORowImpl.getDisminuciones());
    suma =suma.add(null != transfManVORowImpl.getDisminucionesMan()? transfManVORowImpl.getDisminucionesMan():new oracle.jbo.domain.Number(0));
    
    suma =suma.add(transfManVORowImpl.getTransf());
    suma =suma.add(null != transfManVORowImpl.getTransfMan() ? transfManVORowImpl.getTransfMan():new oracle.jbo.domain.Number(0));
    
    suma =suma.add(transfManVORowImpl.getBajaXVenta());
    suma =suma.add(null != transfManVORowImpl.getBajaXVentaMan()?transfManVORowImpl.getBajaXVentaMan():new oracle.jbo.domain.Number(0));
    
    suma =suma.add(transfManVORowImpl.getBajaSIngreso());
    suma =suma.add(null != transfManVORowImpl.getBajaSIngresoMan()?transfManVORowImpl.getBajaSIngresoMan():new oracle.jbo.domain.Number(0));
    
    suma =suma.add(transfManVORowImpl.getDprnXVenta());
    suma =suma.add(null != transfManVORowImpl.getDprnXVentaMan()?transfManVORowImpl.getDprnXVentaMan():new oracle.jbo.domain.Number(0));
    
    suma =suma.add(transfManVORowImpl.getDprnSIngreso());
    suma =suma.add(null != transfManVORowImpl.getDprnSIngresoMan()?transfManVORowImpl.getDprnSIngresoMan():new oracle.jbo.domain.Number(0));
    
    suma =suma.add(transfManVORowImpl.getDprnEjercicio());
    suma =suma.add(null != transfManVORowImpl.getDprnEjercicioMan()?transfManVORowImpl.getDprnEjercicioMan():new oracle.jbo.domain.Number(0));
    
    //Seteamos el valor de suma
    transfManVORowImpl.setSuma(suma);
    
    System.out.println("transfManVORowImpl.setSuma(suma)");
    
    //Sumamos el valor de saldo final
     transfManVORowImpl.setSaldoFinal(new oracle.jbo.domain.Number (0));
     System.out.println("transfManVORowImpl.setSaldoFinal(new oracle.jbo.domain.Number (0))");
    
    saldo_final = saldo_final.add(transfManVORowImpl.getSaldoIni());
    saldo_final = saldo_final.add(null != transfManVORowImpl.getSaldoIniMan()?transfManVORowImpl.getSaldoIniMan():new oracle.jbo.domain.Number (0));
    saldo_final = saldo_final.add(null != transfManVORowImpl.getSuma()?transfManVORowImpl.getSuma():new oracle.jbo.domain.Number (0));
    
    //Seteamos el valor de saldo final
    transfManVORowImpl.setSaldoFinal(saldo_final);
    //System.out.println("transfManVORowImpl.setSaldoFinal(saldo_final)");
    
        System.out.println("*************** antes de salir del for: "+i);
    }//fin de for
    //System.out.println("Registros actualizados: "+i);
}//fin del metodo suma

    /**Container's getter for PeriodoAnteriorVO1
     */
    public PeriodoAnteriorVOImpl getPeriodoAnteriorVO1() {
        return (PeriodoAnteriorVOImpl)findViewObject("PeriodoAnteriorVO1");
    }//FIN DE PeriodoAnteriorVOImpl getPeriodoAnteriorVO1()
    
    /*** metodo que recupera informacion para el siguiente periodo  ******/
    public oracle.jbo.domain.Number getInfoSig(String psi_UniOper, String psi_Periodo
                                                ,String psi_Divisa, String psi_RubroOrg
                                                    , String psi_RubroDes){
                                                    
        Number retAdd;                                                   
        String retval;
        String strStmt = " BEGIN " +
                         " :1 := APPS.xxgam_saf_final_struct_pkg.informacion_mes_sig( psi_UniOper  		=> :2" +
                         "               			, psi_Periodo       => :3" +
                         "               			, psi_Divisa        => :4" +
                         "               			, psi_RubroOrg      => :5" +
                         "               			, psi_RubroDes      => :6" +
                         "               ); " +
                         " END; " ;
                         System.out.println("strStmt_query:     "+strStmt);
        OADBTransaction oadbtransaction = (OADBTransaction)getOADBTransaction();
        OracleCallableStatement oraclecallablestatement =  (OracleCallableStatement)oadbtransaction.createCallableStatement(strStmt, 1);
        
        try
                    {
                      oraclecallablestatement.registerOutParameter(1,Types.DOUBLE);
                      oraclecallablestatement.setString(2,psi_UniOper);
                      oraclecallablestatement.setString(3,psi_Periodo);
                      oraclecallablestatement.setString(4,psi_Divisa); 
                      oraclecallablestatement.setString(5,psi_RubroOrg);
                      oraclecallablestatement.setString(6,psi_RubroDes); 

                     oraclecallablestatement.execute();
                     
                     retAdd = new oracle.jbo.domain.Number(oraclecallablestatement.getDouble(1)); 
                     //System.out.println("retAdd_numero de filas:        "+retAdd);
                     
                  } catch (SQLException sqle)
                  {
                     retval = "Fallo procedimiento addition. "+sqle.getErrorCode()+" , "+sqle.getMessage();
                      throw new OAException(retval,OAException.ERROR); 
                  }
         return  retAdd;         
    
    }//fin de public oracle.jbo.domain.Number getInfoSig()  
    
    
     public void setInfoCopia(String strUniOper
                              ,String strPeriodo      
                              ,String strDivisa
                              ,String strRubroOrg
                              ,String strRubroDes
                              ){
     
         strUniOper1 = strUniOper;
         strPeriodo1 = strPeriodo;
         strDivisa1 = strDivisa;
         strRubroOrg1 = strRubroOrg;
         strRubroDes1 = strRubroDes;
     }//fin de public void setInfoCopia()
     
     public void eliminar2(){
     
        System.out.println("Entro en eliminar 2");
        System.out.println("strUniOper1 "+strUniOper1);
        System.out.println("strPeriodo1 "+strPeriodo1);
        System.out.println("strDivisa1  "+strDivisa1);
        System.out.println("strRubroOrg1 "+strRubroOrg1);
        System.out.println("strRubroDes1 "+strRubroDes1);
          
        eliminar(strUniOper1,strPeriodo1,strRubroOrg1,strRubroDes1,strDivisa1);
     }//fin de eliminar2

    /**Container's getter for TransfManVO1
     */
    public TransfManVOImpl getTransfManVO1() {
        return (TransfManVOImpl)findViewObject("TransfManVO1");
    }

    /**Container's getter for UniOperVO1
     */
    public UniOperVOImpl getUniOperVO1() {
        return (UniOperVOImpl)findViewObject("UniOperVO1");
    }
} /* fin de public class InversionTrxAMImpl extends OAApplicationModuleImpl */
